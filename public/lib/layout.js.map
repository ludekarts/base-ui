{"version":3,"file":"layout.js","sources":["../../src/layout/container.js","../../src/layout/Columns.js","../../src/layout/space.js","../../src/layout/stack.js","../../src/layout/rail.js","../../src/layout/grid.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;  \r\n  padding: 0 1.5em;  \r\n  flex-direction: column;\r\n  ${({ maxW, offsetTop }) => `\r\n    max-width: ${maxW};\r\n    margin: ${offsetTop} auto 1em;\r\n  `};\r\n`;\r\n\r\nContainer.displayName = \"Containter\";\r\n\r\nContainer.propTypes = {\r\n  maxW: PropTypes.string,\r\n  offsetTop: PropTypes.string,\r\n};\r\n\r\nContainer.defaultProps = {\r\n  maxW: \"78rem\",\r\n  offsetTop: \"2rem\",\r\n};\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Columns = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n\r\n  & > * {\r\n    flex: 1 1 ${({ minSize }) => minSize};\r\n    margin: 0; \r\n  }\r\n`;\r\n\r\nColumns.displayName = \"Columns\";\r\nColumns.propTypes = {\r\n  gap: PropTypes.string,\r\n  minSize: PropTypes.string,\r\n};\r\n\r\nColumns.defaultProps = {\r\n  gap: \"1em\",\r\n  minSize: \"14rem\",\r\n}\r\n\r\nexport default Columns;","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Space = styled.div`\r\n  display: flex;\r\n  width: ${({ stretch }) => stretch ? \"100%\" : \"auto\"};\r\n  ${({ breakpoint, minmax, space, inset, spaceBefore, spaceAfter }) => !breakpoint\r\n    ? inset ? `padding: ${space};` : `margin: ${space};`\r\n    : `\r\n      ${inset ? `padding: ${spaceBefore || space}` : `margin: ${spaceBefore || space}`};\r\n      @media (${minmax === \"min\" ? \"min-width\" : \"max-width\"}: ${breakpoint}) {\r\n        ${inset ? `padding: ${spaceAfter || space}` : `margin: ${spaceAfter || space}`};\r\n      }\r\n    `\r\n  }  \r\n`;\r\n\r\nSpace.propTypes = {\r\n  space: PropTypes.string,\r\n  inset: PropTypes.bool,\r\n  stretch: PropTypes.bool,\r\n\r\n  minmax: PropTypes.string,\r\n  breakpoint: PropTypes.string,\r\n  spaceBefore: PropTypes.string,\r\n  spaceAfter: PropTypes.string,\r\n};\r\n\r\nSpace.defaultProps = {\r\n  space: \"1em 0 0\",\r\n  minmax: \"min\",\r\n  inset: false,\r\n  stretch: false,\r\n};\r\n\r\nexport default Space;","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Stack = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > * + * {\r\n    margin-top: ${({ gap }) => gap};\r\n  }\r\n  \r\n  ${({ stretch, breakpoint, gap, expandContent }) => !breakpoint ? `\r\n    ${stretch ? \"width: 100%;\" : \"\"}\r\n    ` : `  \r\n    ${stretch ? \"width: 100%;\" : \"\"}\r\n    \r\n    @media (min-width: ${breakpoint}) {\r\n      flex-direction: row;      \r\n      \r\n      ${expandContent ? \"& > * { width: 100%; }\" : \"\"}\r\n\r\n      & > * + * {\r\n        margin-top: unset;\r\n        margin-left: ${gap};\r\n      }\r\n    }  \r\n  `}\r\n`;\r\n\r\nStack.displayName = \"Stack\";\r\nStack.propTypes = {\r\n  gap: PropTypes.string,\r\n  breakpoint: PropTypes.string,\r\n  stretch: PropTypes.bool,\r\n  expandContent: PropTypes.bool,\r\n};\r\n\r\nStack.defaultProps = {\r\n  gap: \"1em\",\r\n  stretch: false,\r\n  expandContent: false,\r\n};\r\n\r\nexport default Stack;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n// Description:\r\n// Stack element verticaly with given gap between.\r\n// Here breakepoint prop determines max-width to switch on stack mode;\r\n\r\n// USAGE:\r\n/* \r\n  import { Rail } from @ludekarts/base-ui/layout;\r\n  \r\n  <Rail gap=\"1em\" breakpoint=\"500px\" expandContent stretch wrapContent >\r\n    ...\r\n  </Rail>\r\n\r\n*/\r\n\r\nconst Rail = styled.div`  \r\n  display: flex;\r\n  flex-direction: row;\r\n  \r\n  ${({ gap, expandContent, stretch, wrapContent }) => `\r\n    ${stretch ? \"width: 100%;\" : \"\"}\r\n    ${expandContent ? \"& > * { width: 100%; }\" : \"\"}\r\n    & > * + * {\r\n      margin-left: ${gap};\r\n    }  \r\n    ${wrapContent ? `\r\n      flex-wrap: wrap;      \r\n      & > *  {\r\n        margin: 0 ${gap} calc(${gap} * 0.5) 0;      \r\n      }\r\n    ` : `\r\n      & > * + * {\r\n        margin-top: 0;\r\n        margin-left: ${gap};\r\n      }\r\n    `}\r\n  `} \r\n\r\n  ${({ breakpoint, gap, wrapContent }) => !breakpoint || wrapContent ? \"\" : `  \r\n    @media (max-width: ${breakpoint}) {\r\n      flex-direction: column;\r\n      & > * + * {\r\n        margin-top: ${gap};\r\n        margin-left: unset;\r\n      }\r\n    }\r\n  `}; \r\n  \r\n`;\r\n\r\nRail.displayName = \"Rail\";\r\nRail.propTypes = {\r\n  gap: PropTypes.string,\r\n  breakpoint: PropTypes.string,\r\n  stretch: PropTypes.bool,\r\n  expandContent: PropTypes.bool,\r\n};\r\n\r\nRail.defaultProps = {\r\n  gap: \"1em\",\r\n  stretch: false,\r\n  expandContent: false,\r\n};\r\n\r\nexport default Rail;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Grid = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: ${({ gap }) => gap};\r\n  grid-template-columns: repeat(auto-fill, minmax(${({ size }) => size}, 1fr));\r\n\r\n  & > * {\r\n    ${({ align, expandContent }) => `\r\n      ${expandContent ? \"width: 100%\" : \"\"};\r\n      justify-self: ${align};\r\n    `}\r\n  }\r\n`;\r\n\r\nGrid.propTypes = {\r\n  gap: PropTypes.string,\r\n  size: PropTypes.string,\r\n  align: PropTypes.string,\r\n  expandContent: PropTypes.bool,\r\n};\r\n\r\nGrid.defaultProps = {\r\n  gap: \"1em\",\r\n  size: \"16rem\",\r\n  align: \"center\",\r\n  expandContent: false,\r\n};\r\n\r\nexport default Grid;\r\n"],"names":["Container","styled","div","maxW","offsetTop","displayName","propTypes","PropTypes","string","defaultProps","Columns","minSize","gap","Space","stretch","breakpoint","space","inset","spaceBefore","spaceAfter","minmax","bool","Stack","expandContent","Rail","wrapContent","Grid","size","align"],"mappings":"0MAGMA,MAAAA,EAAYC,UAAOC,mHAKrB,wCAAGC,yBAAMC,6BAMbJ,EAAUK,YAAc,aAExBL,EAAUM,UAAY,CACpBH,KAAMI,UAAUC,OAChBJ,UAAWG,UAAUC,QAGvBR,EAAUS,aAAe,CACvBN,KAAM,QACNC,UAAW,QCpBPM,MAAAA,EAAUT,UAAOC,8JAOP,qBAAGS,UAKnBD,EAAQL,YAAc,UACtBK,EAAQJ,UAAY,CAClBM,IAAKL,UAAUC,OACfG,QAASJ,UAAUC,QAGrBE,EAAQD,aAAe,CACrBG,IAAK,MACLD,QAAS,SCnBLE,MAAAA,EAAQZ,UAAOC,+DAEV,qBAAGY,QAAwB,OAAS,QAC3C,gBAAGC,IAAAA,WAAoBC,IAAAA,MAAOC,IAAAA,MAAOC,IAAAA,YAAaC,IAAAA,kBAAkBJ,cAGhEE,eAAoBC,GAAeF,eAAqBE,GAAeF,yBACpD,UAJRI,OAIgB,YAAc,kBAAgBL,mBACvDE,eAAoBE,GAAcH,eAAqBG,GAAcH,uBAJzEC,cAAoBD,iBAAsBA,QAUhDH,EAAMP,UAAY,CAChBU,MAAOT,UAAUC,OACjBS,MAAOV,UAAUc,KACjBP,QAASP,UAAUc,KAEnBD,OAAQb,UAAUC,OAClBO,WAAYR,UAAUC,OACtBU,YAAaX,UAAUC,OACvBW,WAAYZ,UAAUC,QAGxBK,EAAMJ,aAAe,CACnBO,MAAO,UACPI,OAAQ,MACRH,OAAO,EACPH,SAAS,GC9BLQ,MAAAA,EAAQrB,UAAOC,uHAIH,qBAAGU,KAGjB,gBAAGE,IAAAA,QAASC,IAAAA,kBAAsCA,cAGhDD,EAAU,eAAiB,sCAERC,6DALQQ,cAQT,yBAA2B,iFARvBX,wCACtBE,EAAU,eAAiB,eAiBjCQ,EAAMjB,YAAc,QACpBiB,EAAMhB,UAAY,CAChBM,IAAKL,UAAUC,OACfO,WAAYR,UAAUC,OACtBM,QAASP,UAAUc,KACnBE,cAAehB,UAAUc,MAG3BC,EAAMb,aAAe,CACnBG,IAAK,MACLE,SAAS,EACTS,eAAe,GCtBXC,MAAAA,EAAOvB,UAAOC,4FAIhB,gBAAGU,IAAAA,sBAAoBE,QACX,eAAiB,gBADrBS,cAEU,yBAA2B,6CAE5BX,wBAJea,iFAShBb,WAAYA,yGAKTA,8BAKnB,gBAAGG,IAAAA,kBAAoCA,KAAnBU,YAA+C,iCAC9CV,kFADNH,2DAYnBY,EAAKnB,YAAc,OACnBmB,EAAKlB,UAAY,CACfM,IAAKL,UAAUC,OACfO,WAAYR,UAAUC,OACtBM,QAASP,UAAUc,KACnBE,cAAehB,UAAUc,MAG3BG,EAAKf,aAAe,CAClBG,IAAK,MACLE,SAAS,EACTS,eAAe,GC5DXG,IAAAA,EAAOzB,UAAOC,mKAGN,qBAAGU,KACmC,qBAAGe,MAGjD,gCAAUJ,cACQ,cAAgB,gCAD/BK,kBAOTF,EAAKpB,UAAY,CACfM,IAAKL,UAAUC,OACfmB,KAAMpB,UAAUC,OAChBoB,MAAOrB,UAAUC,OACjBe,cAAehB,UAAUc,MAG3BK,EAAKjB,aAAe,CAClBG,IAAK,MACLe,KAAM,QACNC,MAAO,SACPL,eAAe"}