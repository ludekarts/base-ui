{"version":3,"file":"buttons.js","sources":["../src/buttons/ghost.js","../src/buttons/basic.js","../src/buttons/switch.js","../src/buttons/checkbox.js","../src/buttons/underline.js","../src/buttons/highlight.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  z-index: 1;\r\n  border: none;  \r\n  cursor: pointer;\r\n  font-size: 1em;    \r\n  position: relative;\r\n  line-height: 1.3em;\r\n  font-family: inherit;\r\n  display: inline-flex;\r\n  text-decoration: none;\r\n  justify-content: center;  \r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;  \r\n  background-color: transparent;\r\n  transition: color .3s ease;\r\n\r\n  & > span.base-ui-button-text {\r\n    z-index: 1;\r\n    width: 100%;\r\n  }\r\n  \r\n  & > span.base-ui-button-effect {  \r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 0;        \r\n    position: absolute;\r\n    border-radius: inherit;      \r\n    transition: background-color .3s ease, box-shadow .3s ease;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;      \r\n      position: absolute;   \r\n      border-radius: inherit;\r\n      background-color: rgba(0, 0 , 0, 0);\r\n      transition: background-color .3s ease, box-shadow .3s ease;\r\n    }\r\n\r\n    &::before {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n\r\n  ${({ size, text, color, inverse, rounded, active, uppercase }) => `\r\n    ${size === \"lg\" ? \"padding: 0.8em 1.5em;\" : size === \"sm\" ? \"padding: 0.3em 0.8em;\" : \"padding: 0.5em 1em;\"}\r\n    font-size: ${size === \"lg\" ? \"1rem\" : size === \"sm\" ? \"0.85rem\" : \"1em\"};\r\n    color: ${inverse ? text : color};\r\n    text-transform: ${uppercase ? \"uppercase\" : \"none\"};\r\n    \r\n    & > span.base-ui-button-effect {\r\n      border-radius: ${rounded ? \"2em\" : \"0.2em\"};\r\n      box-shadow: 0 0 0 0.15em ${color} inset;\r\n      background-color: ${inverse ? color : text};\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;            \r\n      & > span.base-ui-button-effect::before {\r\n        box-shadow: 0 0 0 3px ${color === \"#999999\" || color === \"transparent\" ? \"black\" : color} ;       \r\n      }\r\n    }\r\n\r\n    &:hover, &.active {\r\n      color: ${inverse ? color : text};\r\n      & > span.base-ui-button-effect {\r\n        background-color: ${inverse ? text : color};        \r\n      }\r\n    }\r\n\r\n    ${!active ? \"\" : `\r\n     color: ${inverse ? color : text};\r\n      & > span.base-ui-button-effect {\r\n        background-color: ${inverse ? text : color};        \r\n      }\r\n    `}\r\n\r\n    &:active {\r\n      & > span.base-ui-button-effect {             \r\n        filter: brightness(0.9);              \r\n      }\r\n    }\r\n  `}\r\n\r\n  & > * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n  }  \r\n\r\n`;\r\n\r\nconst GhostButton = props => {\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <ButtonWrapper {...rest}>\r\n      <span className=\"base-ui-button-effect\"></span>\r\n      <span className=\"base-ui-button-text\">{children}</span>\r\n    </ButtonWrapper>\r\n  );\r\n}\r\n\r\nGhostButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  type: PropTypes.string,\r\n  active: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n  inverse: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n  rounded: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n  uppercase: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n};\r\n\r\nGhostButton.defaultProps = {\r\n  disabled: false,\r\n  inverse: false,\r\n  text: \"inherit\",\r\n  type: \"button\",\r\n  color: \"#999999\",\r\n};\r\n\r\nGhostButton.displayName = \"GhostButton\";\r\n\r\nexport default GhostButton;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  z-index: 1;\r\n  border: none;  \r\n  cursor: pointer;  \r\n  position: relative;\r\n  line-height: 1.3em;\r\n  font-family: inherit;\r\n  display: inline-flex;\r\n  text-decoration: none;\r\n  border-radius: 0.2em;\r\n  justify-content: center; \r\n  align-items: center; \r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;  \r\n  background-color: transparent;\r\n\r\n  & > span.base-ui-button-text {\r\n    z-index: 1;\r\n    width: 100%;\r\n  }\r\n  \r\n  & > span.base-ui-button-effect {  \r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 0;        \r\n    position: absolute;\r\n    border-radius: inherit;      \r\n    \r\n    /* Focus effect */\r\n    &::before {\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;      \r\n      opacity: 0.6;\r\n      position: absolute;   \r\n      border-radius: inherit;\r\n      background-color: rgba(0, 0 , 0, 0);\r\n      transition: background-color .3s ease, box-shadow .3s ease;\r\n    }\r\n  }\r\n\r\n  ${({ size, text, color, inverse }) => `\r\n    ${size === \"lg\" ? \"padding: 0.8em 1.5em;\" : size === \"sm\" ? \"padding: 0.3em 0.8em;\" : \"padding: 0.5em 1em;\"}\r\n    font-size: ${size === \"lg\" ? \"1rem\" : size === \"sm\" ? \"0.85rem\" : \"1em\"};\r\n    color: ${inverse ? color : text};\r\n            \r\n    & > span.base-ui-button-effect {  \r\n      background-color: ${inverse ? text : color};      \r\n    }\r\n\r\n    &:focus {\r\n      outline: none;            \r\n      & > span.base-ui-button-effect::before {\r\n        box-shadow: 0 0 0 3px ${color === \"#DDDDDD\" || color === \"transparent\" ? \"black\" : color} ;      \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      & > span.base-ui-button-effect::before {       \r\n        background-color: rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      & > span.base-ui-button-effect {             \r\n        filter: brightness(0.9);              \r\n      }\r\n    }\r\n  `}\r\n\r\n  & > * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n  }  \r\n\r\n`;\r\n\r\nconst BasicButton = props => {\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <ButtonWrapper {...rest}>\r\n      <span className=\"base-ui-button-effect\"></span>\r\n      <span className=\"base-ui-button-text\">{children}</span>\r\n    </ButtonWrapper>\r\n  );\r\n}\r\n\r\nBasicButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  type: PropTypes.string,\r\n  inverse: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n};\r\n\r\nBasicButton.defaultProps = {\r\n  disabled: false,\r\n  inverse: false,\r\n  text: \"inherit\",\r\n  type: \"button\",\r\n  color: \"#DDDDDD\",\r\n};\r\n\r\nBasicButton.displayName = \"BasicButton\";\r\nexport default BasicButton;\r\n\r\n","import React, { forwardRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled.\r\nconst Label = styled.label`\r\n  font-size: ${({ size }) => size === \"lg\" ? \"1.5rem\" : size === \"sm\" ? \"0.75rem\" : \"1rem\"};\r\n  width: 2.8em;\r\n  height: 1.6em;\r\n  flex-shrink: 0;\r\n  position: relative;  \r\n  display: inline-flex;\r\n  \r\n  & > input {\r\n    opacity:0;\r\n    &:checked + span {\r\n      background-color: ${({ color, offColor }) => offColor || color};\r\n      &::before {\r\n        transform: translateX(1.2em) translateZ(0);\r\n      }    \r\n    }\r\n\r\n    &:checked:focus + span {\r\n      &::after {                \r\n        box-shadow: 0 0 0 3px  ${({ color, offColor }) => offColor || color};\r\n      }\r\n    }\r\n\r\n    &:focus + span {\r\n      &::after {                \r\n        box-shadow: 0 0 0 3px ${({ color }) => color};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Slider = styled.span`\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  cursor: pointer;\r\n  font-size: inherit;\r\n  position: absolute;  \r\n  transition: right .2s ease, background-color .2s ease;\r\n  \r\n  ${({ color, squared }) => `\r\n    border-radius: ${squared ? \"0.1em\" : \"2em\"};\r\n    background-color: ${color};\r\n\r\n    &::before {\r\n      border-radius: ${squared ? \"0.1em\" : \"50%\"}; \r\n    }\r\n  `};\r\n  \r\n  &::before {\r\n    content: \"\";\r\n    left: 0.2em;\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n    bottom: 0.2em;    \r\n    position: absolute;\r\n    background-color: #FFFFFF;\r\n    transition: transform .2s ease;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n    opacity: 0.5;\r\n    position: absolute;   \r\n    border-radius: inherit;      \r\n    transition: box-shadow .3s ease;\r\n  }\r\n`;\r\n\r\nconst Switch = forwardRef((props, ref) => {\r\n  const { id, name, type, color, size, offColor, squared, ...rest } = props;\r\n  return (\r\n    <Label htmlFor={id || name} size={size} color={color} offColor={offColor}>\r\n      <input id={id || name} name={name} type={type} ref={ref} {...rest} />\r\n      <Slider color={color} squared={squared} />\r\n    </Label>\r\n  );\r\n});\r\n\r\n\r\nSwitch.displayName = \"Switch\";\r\n\r\nSwitch.propTypes = {\r\n  size: PropTypes.string,\r\n  color: PropTypes.string,\r\n  squared: PropTypes.bool,\r\n  offColor: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\r\n};\r\n\r\nSwitch.defaultProps = {\r\n  size: \"md\",\r\n  squared: false,\r\n  color: \"#666666\",\r\n  type: \"checkbox\",\r\n};\r\n\r\nexport default Switch;\r\n","import React, { forwardRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled.\r\nconst Input = styled.input`\r\n  &[type=\"radio\"],\r\n  &[type=\"checkbox\"] {\r\n    margin: 0;\r\n    padding: 0;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    position: absolute;\r\n\r\n    &:active,\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    & + span {\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      cursor: pointer;\r\n      user-select: none;\r\n      font-weight: bold;\r\n      position: absolute;\r\n      align-items: center;\r\n      display: inline-flex;\r\n      justify-content: center;      \r\n      box-shadow: inset 0 0 0 0 transparent;\r\n      transition: box-shadow .3s ease;\r\n\r\n      &::after {\r\n        content: \"\";\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        z-index: -1;\r\n        opacity: 0.5;\r\n        position: absolute;   \r\n        border-radius: inherit;      \r\n        transition: box-shadow .3s ease;\r\n      }\r\n    }\r\n    \r\n    ${({ color, bg, rounded }) => `\r\n      & + span {\r\n        color: ${bg};\r\n        border-radius: ${rounded ? \"50%\" : \"0.2rem\"};\r\n        box-shadow: 0 0 0 0.15rem ${color} inset; \r\n      }\r\n\r\n      &:checked + span {\r\n        box-shadow: 0 0 0 1.5rem ${color} inset; \r\n      }\r\n\r\n      &:focus + span {\r\n        &::after {     \r\n          border-radius: ${rounded ? \"50%\" : \"0.2rem\"};\r\n          box-shadow: 0 0 0 0.15rem ${color};          \r\n        }\r\n      }\r\n    `};\r\n\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  flex-shrink: 0;\r\n  line-height: 1;\r\n  position: relative;\r\n  align-items: center;\r\n  display: inline-flex;\r\n  justify-content: center;  \r\n`;\r\n\r\n\r\n// ----  Checkbox ----------------\r\n\r\nconst Checkbox = forwardRef((props, ref) => {\r\n  const { id, name, type, color, bg, rounded, ...rest } = props;\r\n  return (\r\n    <Label htmlFor={id || name} color={color} bg={bg} rounded={rounded}>\r\n      <Input id={id || name} name={name} type={type} color={color} bg={bg} rounded={rounded} ref={ref} {...rest} />\r\n      <span>{rounded ? \"•\" : \"✓\"}</span>\r\n    </Label>\r\n  );\r\n});\r\n\r\nCheckbox.displayName = \"Checkbox\";\r\n\r\nCheckbox.propTypes = {\r\n  bg: PropTypes.string,\r\n  color: PropTypes.string,\r\n  rounded: PropTypes.bool,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n  type: \"checkbox\",\r\n  color: \"#666666\",\r\n  rounded: false,\r\n  bg: \"white\",\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  z-index: 1;\r\n  border: none;  \r\n  cursor: pointer;\r\n  font-size: 1em;    \r\n  position: relative;\r\n  line-height: 1.3em;\r\n  font-family: inherit;\r\n  display: inline-flex;\r\n  text-decoration: none;\r\n  align-items: center;\r\n  justify-content: center;  \r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;  \r\n  background-color: transparent;\r\n  transition: color .3s ease;\r\n\r\n  & > span.base-ui-button-text {\r\n    z-index: 1;\r\n    width: 100%;\r\n  }\r\n  \r\n  & > span.base-ui-button-effect {  \r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 0;        \r\n    position: absolute;\r\n    border-radius: inherit;      \r\n    transition: background-color .3s ease, box-shadow .3s ease;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;      \r\n      position: absolute;   \r\n      border-radius: inherit;\r\n      background-color: rgba(0, 0 , 0, 0);\r\n      transition: background-color .3s ease, box-shadow .3s ease;\r\n    }\r\n\r\n    &::before {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n\r\n  ${({ size, text, color, inverse, active }) => `\r\n    ${size === \"lg\" ? \"padding: 0.8em 1.5em;\" : size === \"sm\" ? \"padding: 0.3em 0.8em;\" : \"padding: 0.5em 1em;\"}\r\n    font-size: ${size === \"lg\" ? \"1rem\" : size === \"sm\" ? \"0.85rem\" : \"1em\"};\r\n    color: ${inverse ? text : color};\r\n    \r\n    & > span.base-ui-button-effect {\r\n      background-color: ${inverse ? color : text};\r\n      &::after {\r\n        bottom: 0;\r\n        left: 51%;\r\n        right: 51%;\r\n        height: 3px;\r\n        content: \"\";\r\n        position: absolute;\r\n        border-radius: 0.2em 0.2em 0 0;\r\n        background-color: ${inverse ? text : color};\r\n        transition: left .3s ease, right .3s ease;  \r\n      }\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;            \r\n      & > span.base-ui-button-effect::before {\r\n        box-shadow: 0 0 0 3px ${color === \"#999999\" || color === \"transparent\" ? \"black\" : color} ;       \r\n      }\r\n    }\r\n\r\n    &:hover, &.active {\r\n      & > span.base-ui-button-effect::after {\r\n        left: 0;\r\n        right: 0;\r\n      }\r\n    }\r\n\r\n    ${!active ? \"\" : `\r\n      color: ${inverse ? color : text};\r\n      & > span.base-ui-button-effect {\r\n        background-color: ${inverse ? text : color};\r\n      }\r\n\r\n      & > span.base-ui-button-effect::after {\r\n        left: 10%;\r\n        right: 10%;        \r\n        background-color: ${inverse ? color : text};\r\n      }\r\n    `}\r\n\r\n    &:active {\r\n      & > span.base-ui-button-effect {             \r\n        filter: brightness(0.9);              \r\n      }\r\n    }\r\n  `}\r\n\r\n  & > * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n  }  \r\n\r\n`;\r\n\r\nconst UnderlineButton = props => {\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <ButtonWrapper {...rest}>\r\n      <span className=\"base-ui-button-effect\"></span>\r\n      <span className=\"base-ui-button-text\">{children}</span>\r\n    </ButtonWrapper>\r\n  );\r\n}\r\n\r\nUnderlineButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  type: PropTypes.string,\r\n  active: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n  inverse: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.number,\r\n  ]),\r\n\r\n};\r\n\r\nUnderlineButton.defaultProps = {\r\n  disabled: false,\r\n  inverse: false,\r\n  text: \"inherit\",\r\n  type: \"button\",\r\n  color: \"#999999\",\r\n};\r\n\r\nUnderlineButton.displayName = \"UnderlineButton\";\r\n\r\nexport default UnderlineButton;\r\n\r\n\r\n\r\n\r\n// const UnderlineButton = styled(Button)`\r\n\r\n//   border-radius: initial;\r\n\r\n//   ${({ color, bg, inverse }) => `\r\n//     background-color: ${inverse ? color : bg};\r\n//     color: ${inverse ? bg : color};\r\n//     &::after {\r\n//       background-color: ${inverse ? bg : color};\r\n//     }\r\n//   `};\r\n\r\n//   &::after {\r\n    // bottom: 0;\r\n    // left: 51%;\r\n    // right: 51%;\r\n    // height: 3px;\r\n    // content: \"\";\r\n    // position: absolute;\r\n    // transition: left .3s ease, right .3s ease;    \r\n//   }\r\n\r\n//   &:hover {\r\n//     filter: none;\r\n//     &::after {\r\n      // left: 0;\r\n      // right: 0;\r\n//     }\r\n//   }\r\n// `;\r\n\r\n// UnderlineButton.defaultProps = {\r\n//   bg: \"white\",\r\n//   active: 0,\r\n//   inverse: 0,\r\n//   color: \"#222222\",\r\n// };\r\n\r\n// UnderlineButton.propTypes = {\r\n//   bg: PropTypes.string,\r\n//   color: PropTypes.string,\r\n// };\r\n\r\n// export default UnderlineButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  z-index: 1;\r\n  border: none;  \r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  cursor: pointer;     \r\n  position: relative;\r\n  line-height: 1.3em;\r\n  font-family: inherit;\r\n  display: inline-flex;\r\n  text-decoration: none;\r\n  align-items: center; \r\n  justify-content: center;\r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;  \r\n  background-color: transparent;\r\n\r\n  & > span.base-ui-button-text {\r\n    z-index: 1;    \r\n  }\r\n  \r\n  & > span.base-ui-button-effect {  \r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 0;        \r\n    position: absolute;\r\n    border-radius: inherit;      \r\n    \r\n    /* Focus effect */\r\n    &::before {\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;      \r\n      opacity: 0.6;\r\n      position: absolute;   \r\n      border-radius: inherit;      \r\n      transition: background-color .3s ease, box-shadow .3s ease;\r\n    }\r\n\r\n    /* Highlight effect */\r\n    &::after {\r\n      content: \"\";\r\n      top: 50%;\r\n      left: 50%;\r\n      width: 100%;      \r\n      height: 100%;      \r\n      position: absolute;   \r\n      border-radius: inherit;      \r\n      transition: transform .3s ease, opacity .3s ease;\r\n    }\r\n  }\r\n\r\n  ${({ size, color, activeText, square, outline, active }) => `\r\n    font-size: ${size === \"lg\" ? \"1.5rem\" : size === \"sm\" ? \"0.57rem\" : \"1em\"};\r\n    width: 1em;\r\n    height: 1em;\r\n    padding: 1em;\r\n    color: ${outline ? color : \"inherit\"};\r\n    border-radius: ${square ? \"0.2em\" : \"50%\"};\r\n\r\n    & > span.base-ui-button-effect {\r\n      box-shadow: 0 0 0 ${outline ? \"0.1em\" : \"0\"} ${outline ? color : \"none\"} inset;\r\n    }\r\n     \r\n    & > span.base-ui-button-effect::after {       \r\n      opacity: 0;\r\n      background-color: ${color};\r\n      transform: translate3d(-50%, -50%, 0) scale(0.2);\r\n    }    \r\n    \r\n    &:focus {\r\n      outline: none;                  \r\n      & > span.base-ui-button-effect::before {\r\n        box-shadow: 0 0 0 3px ${color === \"rgba(0, 0, 0, 0.2)\" || color === \"transparent\" ? \"black\" : color} ;      \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      color: ${activeText};\r\n      & > span.base-ui-button-effect::after {       \r\n        opacity: 1;        \r\n        transform: translate3d(-50%, -50%, 0) scale(1);\r\n      }\r\n    }\r\n\r\n    ${!active ? \"\" : `    \r\n      color: ${activeText};\r\n      & > span.base-ui-button-effect::after {       \r\n        opacity: 1;        \r\n        transform: translate3d(-50%, -50%, 0) scale(1);\r\n      }\r\n    `}\r\n\r\n    &:active {\r\n      & > span.base-ui-button-effect {             \r\n        filter: brightness(0.9);              \r\n      }\r\n    }\r\n  `}\r\n\r\n  & > * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n  }  \r\n`;\r\n\r\nconst HighlightButton = props => {\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <ButtonWrapper {...rest}>\r\n      <span className=\"base-ui-button-effect\"></span>\r\n      <span className=\"base-ui-button-text\">{children}</span>\r\n    </ButtonWrapper>\r\n  );\r\n}\r\n\r\n\r\nHighlightButton.displayName = \"HighlightButton\";\r\nHighlightButton.propTypes = {\r\n  bg: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nHighlightButton.defaultProps = {\r\n  color: \"rgba(0, 0, 0, 0.2)\",\r\n  activeText: \"inherit\"\r\n};\r\n\r\nexport default HighlightButton;\r\n\r\n/*\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HighlightButton = styled.button`\r\n  z-index: 0;\r\n  border: none;\r\n  flex-shrink: 0;\r\n  background: none;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  align-items: center;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n\r\n  ${({ size, color }) => `\r\n    width: ${size};\r\n    height: ${size};\r\n\r\n    &:hover::before {\r\n      background-color:${color};\r\n    }\r\n  `}\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::before {\r\n    top: 50%;\r\n    left: 50%;\r\n    content: \"\";\r\n    width: 60%;\r\n    height: 60%;\r\n    z-index: -1;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    transform: translateX(-50%) translateY(-50%);\r\n    transition: width 0.3s ease, height 0.3s ease, background-color 0.3s ease;\r\n  }\r\n\r\n  &:hover::before {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n  }\r\n\r\n  ${({ active, color }) => !active ? \"\" : `\r\n    &::before {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      border-radius: 50%;\r\n      background-color:${color};\r\n      transform: translateX(-50%) translateY(-50%);\r\n    }\r\n  `}\r\n`;\r\n\r\nHighlightButton.displayName = \"HighlightButton\";\r\n\r\nHighlightButton.propTypes = {\r\n  size: PropTypes.string,\r\n  color: PropTypes.string,\r\n  type: PropTypes.string,\r\n  active: PropTypes.bool,\r\n};\r\n\r\nHighlightButton.defaultProps = {\r\n  size: \"2em\",\r\n  active: false,\r\n  type: \"button\",\r\n  color: \"rgba(0, 0, 0, 0.1)\",\r\n};\r\n\r\nexport default HighlightButton;\r\n\r\n*/"],"names":["ButtonWrapper","styled","button","size","text","color","inverse","uppercase","rounded","active","GhostButton","props","children","rest","React","className","propTypes","disabled","PropTypes","bool","string","type","oneOfType","number","defaultProps","displayName","BasicButton","Label","label","offColor","Slider","span","squared","Switch","forwardRef","ref","id","name","htmlFor","isRequired","oneOf","Input","input","bg","Checkbox","UnderlineButton","activeText","outline","square","HighlightButton"],"mappings":"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"}