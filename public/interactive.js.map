{"version":3,"file":"interactive.js","sources":["../src/interactive/slider.js","../src/interactive/collapse.js","../src/utils/common.js","../src/interactive/breakpoint-class.js","../src/utils/use-maedia-query.js"],"sourcesContent":["import React, { Children, useEffect, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { debounce } from \"@ludekarts/utility-belt\";\r\n\r\nconst Wrapper = styled.div`\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: height .3s ease;\r\n\r\n  ${({ height }) => height ? `\r\n    position: relative;\r\n    height: ${height}px;\r\n  ` : `\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    position: absolute;\r\n  `};\r\n\r\n  & > .slide {\r\n    opacity: 0;\r\n    position: absolute;\r\n    visibility: hidden;\r\n    pointer-events: none;\r\n    transition: transform .3s ease, opacity .3s ease, visibility 0s ease .4s;\r\n\r\n    &.bck {\r\n      ${({ variant }) => variant === \"vertical\" ? `\r\n        transform: translateY(100%);\r\n        ` : `\r\n        transform: translateX(100%);\r\n        `}\r\n    }\r\n\r\n    &.frd {\r\n      ${({ variant }) => variant === \"vertical\" ? `\r\n          transform: translateY(-100%);\r\n        ` : `\r\n          transform: translateX(-100%);\r\n        `}\r\n    }\r\n\r\n    &.active {\r\n      opacity: 1;\r\n      visibility: visible;\r\n      pointer-events: all;\r\n      ${({ variant }) => variant === \"vertical\" ? `\r\n        transform: translateY(0);\r\n        ` : `\r\n        transform: translateX(0);\r\n        `}\r\n      transition: transform .3s ease, opacity .3s ease, visibility 0s ease;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Slider = props => {\r\n  const { children, activeIndex, loop, variant, fitHeight, ...rest } = props;\r\n  const wrapper = useRef();\r\n  const prevIndex = useRef();\r\n  const [heightIndex, setHeightIndex] = useState([]);\r\n  const childrenLength = Children.count(children);\r\n\r\n  // Determine animation direction.\r\n  const direction = prevIndex.current > activeIndex ? \"bck\" : prevIndex.current < activeIndex ? \"frd\" : \"bck\";\r\n\r\n  // Ensure activeIndex is always in range of children array.\r\n  const inRangeActiveIndex = loop\r\n    // When looping, values from out of the range will be transformed to one's in range.\r\n    ? activeIndex % childrenLength\r\n    // When not looping accepts only values from the range.\r\n    : activeIndex < 0\r\n      ? 0\r\n      : activeIndex >= childrenLength\r\n        ? childrenLength - 1\r\n        : activeIndex % childrenLength;\r\n\r\n  // Calculate proper currentIndex value base on animation direction.\r\n  const currentIndex = direction === \"frd\" ? inRangeActiveIndex : (inRangeActiveIndex + childrenLength) % childrenLength;\r\n\r\n  // Collect slides height.\r\n  const getSidesHeight = () => wrapper.current && setHeightIndex(\r\n    Array.from(wrapper.current.childNodes).map(e => Math.floor(e.getBoundingClientRect().height))\r\n  );\r\n\r\n  const handleResize = debounce(() => getSidesHeight());\r\n\r\n  // Store prevIndex for direction purpose.\r\n  useEffect(() => {\r\n    prevIndex.current = currentIndex;\r\n  }, [currentIndex]);\r\n\r\n  // Initial size setup when wrapper inserted into the DOM or children changes.\r\n  useEffect(() => {\r\n    wrapper.current && children && fitHeight && getSidesHeight();\r\n  }, [wrapper.current, children]);\r\n\r\n  // Recalculate heigh on resize.\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper {...rest} variant={variant} height={heightIndex[currentIndex]} ref={wrapper}>\r\n      {\r\n        Children.map(children, (child, index) => {\r\n          const offClass = getOffsetClass(index, currentIndex, direction);\r\n          let element;\r\n\r\n          if (currentIndex === index) {\r\n            element = React.cloneElement(child, { className: `${child.props.className || \"\"} slide active` })\r\n          }\r\n\r\n          // Handle proper class setup an the edges of childrens array while looping.\r\n          else if (loop && ((currentIndex === childrenLength - 1 && index === 0) || (currentIndex === 0 && index === childrenLength - 1))) {\r\n            element = React.cloneElement(child, { className: `${child.props.className || \"\"} slide ${flipDirection(offClass)}` });\r\n          }\r\n\r\n          else {\r\n            element = React.cloneElement(child, { className: `${child.props.className || \"\"} slide ${offClass}` });\r\n          }\r\n\r\n          return element;\r\n        })\r\n      }\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nSlider.displayName = \"Slider\";\r\nSlider.propTypes = {\r\n  loop: PropTypes.bool,\r\n  fitHeight: PropTypes.bool,\r\n  activeIndex: PropTypes.number,\r\n  variant: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\r\n};\r\n\r\nSlider.defaultProps = {\r\n  loop: false,\r\n  activeIndex: 0,\r\n  fitHeight: false,\r\n  variant: \"horizontal\",\r\n};\r\n\r\nexport default Slider;\r\n\r\n\r\n// ---- Helpers ----------------\r\n\r\nfunction getOffsetClass(index, currentIndex, direction) {\r\n  return direction === \"frd\"\r\n    ? index < currentIndex\r\n      ? direction\r\n      : index > currentIndex\r\n        ? flipDirection(direction)\r\n        : \"\"\r\n    : index > currentIndex\r\n      ? direction\r\n      : index < currentIndex\r\n        ? flipDirection(direction)\r\n        : \"\";\r\n}\r\n\r\nfunction flipDirection(direction) {\r\n  return direction === \"bck\" ? \"frd\" : \"bck\";\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { debounce } from \"../utils\";\r\n\r\nconst Wrapper = styled.div`\r\n  overflow: hidden;\r\n  transition: height .3s ease;\r\n  ${({ open, height, mxh, mnh }) => `\r\n    height: ${open ? height : 0}px;\r\n    ${mnh ? `min-height: ${mnh}px;` : ``}\r\n    ${mxh ? `max-height: ${mxh}px; overflow: auto;` : ``}\r\n  `}\r\n`;\r\n\r\nconst Collapse = props => {\r\n  const { open, ...rest } = props;\r\n  const [height, setHeight] = useState(0);\r\n  const wrapper = useRef();\r\n\r\n  const updateOnResize = debounce(() => {\r\n    wrapper.current && setHeight(wrapper.current.scrollHeight);\r\n  }, 400);\r\n\r\n  useEffect(updateOnResize, [open]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateOnResize);\r\n    return () => window.removeEventListener(\"resize\", updateOnResize);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper {...rest} open={open} height={height} ref={wrapper} />\r\n  );\r\n}\r\n\r\nCollapse.displayName = \"Collapse\";\r\nCollapse.propTypes = {\r\n  open: PropTypes.bool,\r\n  mxh: PropTypes.number,\r\n  mnh: PropTypes.number,\r\n};\r\n\r\nCollapse.defaultProps = {\r\n  open: false,\r\n};\r\n\r\nexport default Collapse;\r\n","export function hexToRGBA(hex, alpha = 1) {\r\n  let r = 0, g = 0, b = 0;\r\n\r\n  if (!isHexColor(hex))\r\n    return hex;\r\n\r\n  // 3 digits\r\n  if (hex.length == 4) {\r\n    r = \"0x\" + hex[1] + hex[1];\r\n    g = \"0x\" + hex[2] + hex[2];\r\n    b = \"0x\" + hex[3] + hex[3];\r\n\r\n    // 6 digits\r\n  } else if (hex.length == 7) {\r\n    r = \"0x\" + hex[1] + hex[2];\r\n    g = \"0x\" + hex[3] + hex[4];\r\n    b = \"0x\" + hex[5] + hex[6];\r\n  } else {\r\n    throw new Error(`hexToRGBA Error: Wrong hex color: ${hex}`)\r\n  }\r\n\r\n  return `rgba(${+r}, ${+g}, ${+b}, ${alpha})`;\r\n}\r\n\r\nexport function isHexColor(color) {\r\n  return /^#([\\da-f]{3}){1,2}$/i.test(color);\r\n}\r\n\r\n\r\n// Debounce callback fn.\r\nexport function debounce(callback, delay, immediate) {\r\n  let timeout;\r\n  return (...args) => {\r\n    const later = () => {\r\n      timeout = null;\r\n      !immediate && callback(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, delay);\r\n    immediate && !timeout && callback(...args);\r\n  };\r\n};\r\n","import React, { Children } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMediaQuery } from \"../utils\";\r\n\r\nconst BreakpointClass = props => {\r\n  const { children, breakpoint, beforeClass, afterClass } = props;\r\n  const isBreakpoint = useMediaQuery(breakpoint);\r\n  console.log(afterClass, beforeClass);\r\n  const currentClass = isBreakpoint ? afterClass : beforeClass;\r\n  return Children.map(children, child =>\r\n    React.cloneElement(child, { className: `${child.props.className} ${currentClass}` })\r\n  );\r\n}\r\n\r\nBreakpointClass.displayName = \"BreakpointClass\";\r\nBreakpointClass.propTypes = {\r\n  breakpoint: PropTypes.string.isRequired,\r\n  afterClass: PropTypes.string,\r\n  beforeClass: PropTypes.string,\r\n};\r\n\r\nBreakpointClass.defaultProps = {\r\n  afterClass: \"\",\r\n  beforeClass: \"\",\r\n};\r\n\r\nexport default BreakpointClass;","import { useRef, useState, useEffect } from \"react\";\r\n\r\n// Changes state when match for given mediaQuery changes.\r\n//\r\n// USAGE:\r\n//\r\n// import useMediaQuery from \"hooks/use-media-query\";\r\n// ...\r\n//\r\n// const isMobile = useMediaQuery(\"(max-width: 450px)\"); // true for screens < 450px;\r\n\r\nexport default function useMediaQuery(mediaQuery) {\r\n  const handler = useRef(window.matchMedia(mediaQuery));\r\n  const [matches, setMatches] = useState(handler.current.matches);\r\n  const mediaChange = () => {\r\n    setMatches(handler.current.matches);\r\n  };\r\n  useEffect(() => {\r\n    handler.current.addEventListener(\"change\", mediaChange);\r\n    return () => {\r\n      handler.current.removeEventListener(\"change\", mediaChange);\r\n    }\r\n  }, [mediaQuery]);\r\n\r\n  return matches;\r\n}"],"names":["Wrapper","styled","div","height","variant","Slider","props","children","activeIndex","loop","fitHeight","rest","wrapper","useRef","prevIndex","useState","heightIndex","setHeightIndex","childrenLength","Children","count","direction","current","inRangeActiveIndex","currentIndex","getSidesHeight","Array","from","childNodes","map","e","Math","floor","getBoundingClientRect","handleResize","debounce","useEffect","window","addEventListener","React","ref","child","index","offClass","flipDirection","getOffsetClass","cloneElement","className","displayName","propTypes","PropTypes","bool","number","oneOf","defaultProps","mxh","mnh","open","Collapse","callback","timeout","setHeight","updateOnResize","scrollHeight","args","later","clearTimeout","setTimeout","removeEventListener","BreakpointClass","mediaQuery","handler","matches","setMatches","mediaChange","beforeClass","afterClass","isBreakpoint","breakpoint","matchMedia","console","log","currentClass","string","isRequired"],"mappings":"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"}