{"version":3,"file":"utils.js","sources":["../src/utils/common.js","../src/utils/use-maedia-query.js"],"sourcesContent":["export function hexToRGBA(hex, alpha = 1) {\r\n  let r = 0, g = 0, b = 0;\r\n\r\n  if (!isHexColor(hex))\r\n    return hex;\r\n\r\n  // 3 digits\r\n  if (hex.length == 4) {\r\n    r = \"0x\" + hex[1] + hex[1];\r\n    g = \"0x\" + hex[2] + hex[2];\r\n    b = \"0x\" + hex[3] + hex[3];\r\n\r\n    // 6 digits\r\n  } else if (hex.length == 7) {\r\n    r = \"0x\" + hex[1] + hex[2];\r\n    g = \"0x\" + hex[3] + hex[4];\r\n    b = \"0x\" + hex[5] + hex[6];\r\n  } else {\r\n    throw new Error(`hexToRGBA Error: Wrong hex color: ${hex}`)\r\n  }\r\n\r\n  return `rgba(${+r}, ${+g}, ${+b}, ${alpha})`;\r\n}\r\n\r\nexport function isHexColor(color) {\r\n  return /^#([\\da-f]{3}){1,2}$/i.test(color);\r\n}\r\n\r\n\r\n// Debounce callback fn.\r\nexport function debounce(callback, delay, immediate) {\r\n  let timeout;\r\n  return (...args) => {\r\n    const later = () => {\r\n      timeout = null;\r\n      !immediate && callback(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, delay);\r\n    immediate && !timeout && callback(...args);\r\n  };\r\n};\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\n// Changes state when match for given mediaQuery changes.\r\n//\r\n// USAGE:\r\n//\r\n// import useMediaQuery from \"hooks/use-media-query\";\r\n// ...\r\n//\r\n// const isMobile = useMediaQuery(\"(max-width: 450px)\"); // true for screens < 450px;\r\n\r\nexport default function useMediaQuery(mediaQuery) {\r\n  const handler = useRef(window.matchMedia(mediaQuery));\r\n  const [matches, setMatches] = useState(handler.current.matches);\r\n  const mediaChange = () => {\r\n    setMatches(handler.current.matches);\r\n  };\r\n  useEffect(() => {\r\n    handler.current.addEventListener(\"change\", mediaChange);\r\n    return () => {\r\n      handler.current.removeEventListener(\"change\", mediaChange);\r\n    }\r\n  }, [mediaQuery]);\r\n\r\n  return matches;\r\n}"],"names":["isHexColor","color","test","callback","delay","immediate","timeout","args","later","clearTimeout","setTimeout","hex","alpha","r","g","b","length","Error","mediaQuery","handler","useRef","window","matchMedia","useState","current","matches","setMatches","mediaChange","useEffect","addEventListener","removeEventListener"],"mappings":"gCAwBgBA,EAAWC,GACzB,8BAA+BC,KAAKD,6BAKbE,EAAUC,EAAOC,GACxC,IAAIC,EACJ,sBAAWC,2BACHC,EAAQ,WACZF,EAAU,MACTD,GAAaF,eAAYI,IAE5BE,aAAaH,GACbA,EAAUI,WAAWF,EAAOJ,GAC5BC,IAAcC,GAAWH,eAAYI,gCAvCfI,EAAKC,YAAAA,IAAAA,EAAQ,GACrC,IAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAEtB,IAAKf,EAAWW,GACd,OAAOA,EAGT,GAAkB,GAAdA,EAAIK,OACNH,EAAI,KAAOF,EAAI,GAAKA,EAAI,GACxBG,EAAI,KAAOH,EAAI,GAAKA,EAAI,GACxBI,EAAI,KAAOJ,EAAI,GAAKA,EAAI,WAGD,GAAdA,EAAIK,OAKb,UAAUC,2CAA2CN,GAJrDE,EAAI,KAAOF,EAAI,GAAKA,EAAI,GACxBG,EAAI,KAAOH,EAAI,GAAKA,EAAI,GACxBI,EAAI,KAAOJ,EAAI,GAAKA,EAAI,GAK1B,gBAAgBE,SAAOC,SAAOC,OAAMH,2DCVAM,GACpC,IAAMC,EAAUC,SAAOC,OAAOC,WAAWJ,MACXK,WAASJ,EAAQK,QAAQC,SAAhDA,OAASC,OACVC,EAAc,WAClBD,EAAWP,EAAQK,QAAQC,UAS7B,OAPAG,YAAU,WAER,OADAT,EAAQK,QAAQK,iBAAiB,SAAUF,cAEzCR,EAAQK,QAAQM,oBAAoB,SAAUH,KAE/C,CAACT,IAEGO"}